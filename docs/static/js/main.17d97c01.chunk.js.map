{"version":3,"sources":["components/AddCategory.js","helpers/GetGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFechGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","actuales","placeholder","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","gif","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","useFecthGifs","img","GifExpertApp","categorias","each","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,QAAU,IAC3BR,GAAc,SAACS,GAAD,OAAeP,GAAf,mBAA6BO,OAC3CN,EAAc,MAKlB,SACI,uBACIO,YAAc,oBACdC,KAAK,OACLC,MAAOV,EACPW,SAnBS,SAACR,GAClBF,EAAcE,EAAES,OAAOF,a,+BCNlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC3B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAcZM,GAdY,4CAAH,sDCAPO,EAAc,SAAC,GAAsB,IAArBJ,EAAoB,EAApBA,GAAIT,EAAgB,EAAhBA,IAAKU,EAAW,EAAXA,MAElC,OADAI,QAAQC,IAAI,CAACN,KAAIT,MAAKU,UAElB,sBAAKM,UAAU,yCAAf,UACI,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,4BAAIA,QCFHS,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAEtB,ECFwB,SAACA,GACzB,MAA0Bf,mBAAS,CAC/BsB,KAAM,GACNe,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAsBA,OAjBAC,qBAAU,WAEN1B,EAAQC,GACH0B,MAAK,SAAAlB,GAEFgB,EAAS,CACLjB,KAAMC,EACNc,SAAS,SAQtB,CAACtB,IAEGuB,EDrBuBI,CAAa3B,GAA/Ba,EAAZ,EAAON,KAAYe,EAAnB,EAAmBA,QAYnB,OACI,qCACI,6BAAKtB,IAEJsB,GAAW,mBAAGJ,UAAU,0CAAb,wBAEZ,qBAAKA,UAAU,YAAf,SACML,EAAOJ,KAAI,SAAAmB,GACR,OAAO,cAAC,EAAD,eAA8BA,GAAZA,EAAIjB,aEYnCkB,EAhCM,WAGjB,MAAoC5C,mBAAS,CAAC,WAA9C,mBAAO6C,EAAP,KAAmB9C,EAAnB,KASA,OACI,qCACI,8CAEA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ8C,EAAWrB,KAAI,SAACsB,GAAD,OACf,cAAC,EAAD,CAEI/B,SAAU+B,GADLA,Y,MCzB7BC,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.17d97c01.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategorias}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleChange = (e)=>{\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if(inputValue.trim().length >= 2){\r\n            setCategorias((actuales) => [inputValue,...actuales] )\r\n            setInputValue('')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit= {handleSubmit}>\r\n            <input\r\n                placeholder = 'Que desea buscar?'\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleChange}\r\n            >\r\n            </input>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategorias : PropTypes.func.isRequired\r\n}","\r\n\r\nexport const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=5El953it319EnsvYVOm9Wk4AWGjZanb1`\r\n    const resp = await fetch(url)\r\n    const { data } = await resp.json()\r\n\r\n    const gifs = data.map((gif) => {\r\n        return {\r\n            id: gif.id,\r\n            title: gif.title,\r\n            url: gif.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    //Esto retorna unas promesa que resueva los gifs entonces al otro lado debo de poner obligatoriamente then\r\n    return gifs\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, url, title}) => {\r\n    console.log({id, url, title})\r\n    return (\r\n        <div className='card animate__animated animate__bounce'>\r\n            <img src={url} alt={title}></img>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { getGifs } from '../helpers/GetGifs'\r\nimport { useFecthGifs } from '../hooks/useFechGifs'\r\nimport { GifGridItem } from './GifGridItem'\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const {data:images,loading} = useFecthGifs(category)\r\n\r\n    /**\r\n     * recordar que gifs => setimages(gifs) -> setimages\r\n     * \r\n     * <GifGridItem key={img.id} {...img} --> manda la info de img como props independientes\r\n     * \r\n     * const {data:images,loading} -> para renombrar variables\r\n     */\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n\r\n            {loading && <p className='animate__animated animate__jackInTheBox'>Loading...</p>}\r\n\r\n            <div className='card-grid'>\r\n                 {images.map(img => {\r\n                     return <GifGridItem key={img.id} {...img} />\r\n                })}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from \"../helpers/GetGifs\"\r\n\r\n\r\n\r\nexport const useFecthGifs = (category) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs(category)\r\n            .then(gifs => {\r\n\r\n                setstate({\r\n                    data: gifs,\r\n                    loading: false\r\n                })\r\n\r\n\r\n\r\n            })\r\n\r\n\r\n    }, [category])\r\n\r\n    return state\r\n}","import React, {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst categoriasRandom = ['Parasite', 'One Punch', 'Tokyo Ghoul']\r\nlet init = ['Naruto', 'Attack On Titans', 'Kimetzu no Yaiba']\r\n\r\nconst GifExpertApp = () => {\r\n\r\n\r\n    const [categorias, setCategorias] = useState(['Naruto'])\r\n\r\n\r\n    // const handleAdd = () => {\r\n    //     const categoriasRandomNro = Math.floor(Math.random()*3)\r\n    //     const valorAPoner = categoriasRandom[categoriasRandomNro]\r\n    //     setCategorias([valorAPoner,...categorias])\r\n    // }\r\n\r\n    return(\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n\r\n            <AddCategory setCategorias={setCategorias}/>\r\n            <hr/>\r\n\r\n            <ol>\r\n                {\r\n                    categorias.map((each) =>\r\n                    <GifGrid \r\n                        key={each}\r\n                        category={each}\r\n                    />)\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n} \r\n\r\nexport default GifExpertApp","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}